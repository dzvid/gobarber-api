version: '3'

services:
  gobarber-api:
    build: .
    container_name: gobarber-api
    environment:
      - NODE_ENV=production
      - DB_HOST=gobarber-postgres
      - REDIS_HOST=gobarber-redis
      - MONGO_HOST=gobarber-mongo
    restart: always
    ports:
      - '3333:3333'
    depends_on:
      - gobarber-postgres
      - gobarber-mongo
      - gobarber-redis
    networks:
      - gobarber-network

  gobarber-postgres:
    image: postgres
    container_name: gobarber-postgres
    restart: always
    environment:
      - DB_HOST=gobarber-postgres
      - POSTGRES_USER:${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - gobarber-postgres-data:/var/lib/postgresql/data
    ports:
      - '${DB_PORT}:5432'
    networks:
      - gobarber-network

  gobarber-mongo:
    image: mongo
    container_name: gobarber-mongo
    restart: always
    environment:
      - MONGO_HOST=gobarber-mongo
    volumes:
      - gobarber-mongo-data:/data/db
    ports:
      - '${MONGO_PORT}:27017'
    networks:
      - gobarber-network

  gobarber-redis:
    image: redis:alpine
    container_name: gobarber-redis
    restart: always
    environment:
      - REDIS_HOST=gobarber-redis
    volumes:
      - gobarber-redis-data:/data
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - gobarber-network

volumes:
  gobarber-postgres-data:
  gobarber-mongo-data:
  gobarber-redis-data:

networks:
  gobarber-network:
    driver: bridge
